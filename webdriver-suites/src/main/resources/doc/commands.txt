-------------------------------------------------------------------------------------
Commands to implement:
-------------------------------------------------------------------------------------


// consider also soft assertions for all below:(e.g. "softCheck...")
// also do negated versions for most of the below - e.g. "~check"
// and negated soft (~softCheck...)
// so 4 versions of all commands below:

Legend:
+ - implemented normal check, "s" - soft, "~" - negated, | "-" negated soft
! - command will not implicitly wait for exact condition to be met - although it will wait for some elements with an
	implicit wait, but the condition will be checked immediately afterwards, so more elements can be loaded
	
!! - performance-impaired

(+s~|)	check					checks if elements exists		
(+s~|)	checkTitle
(+s~|)	checkTitleContains
(+s~|)	checkTitleMatches
(+s~|)	checkUrl
(+s~|)	checkUrlContains
(+s~|)	checkUrlMatches
(+s~|)	checkPageSource
(+s~|)	checkPageSourceContains
(+s~|)	checkPageSourceMatches
(+s~|)	checkText				checks if given string exists anywhere on the page
(+s~|)	checkTextMatching		checks if there is a text anywhere on the page that matches given regex (!)
(+s~|)	checkElementText				checks if GIVEN element has EXACTLY this text as innerText (!)
(+s~|)	checkElementTextContains		as above, but contains (!)
(+s~|)	checkElementTextMatches			as above, matches (!)
(+s~|)	checkInnerHTML				(!)
(+s~|)	checkInnerHTMLContains		(!)
(+s~|)	checkInnerHTMLMatches		(!)
(+s~|)	checkLinkText					checks if link with given text exists
(+s~|)	checkLinkTextContaining
(+s~|)	checkLinkTextMatching
(+s~|)	checkLinkHREF				checks of link with given HREF value exists
(+s~|)	checkLinkHREFContaining
(+s~|)	checkLinkHREFMatching
(+s~|)	checkAttributeName				checks if given attribute exists anywhere on the page with whatever value (!!)
(+s~|)	checkAttributeValue				checks if given attribute value exists anywhere on the page (!!)
(+s~|)	checkAttributeValueContaining	checks if given attribute value containing text exists anywhere on the page
(+s~|)	checkAttributeValueMatching		checks if given attribute exists anywhere on the page with value matching text
(+s~|)	checkElementAttr				checks if element has an attribute
(+s~|)	checkElementAttValue			checks if element has an attribute with a given value
(+s~|)	checkElementAttValueContains	checks if element has an attribute with a value containing string
()	checkElementAttValueMatches			checks if element has an attribute with a value matching regex
()	checkSelected				checks if given checkbox is selected
()	checkSelectedText			checks if given option in select component is chosen by text
()	checkSelectedIdx			checks if given option in select component is chosen by index
()	checkCss					check for given element if its CSS attribute has a given value (e.g. background-color)
()	checkCssClass				checks if given element has given CSS class
()	checkElementVisible
()	checkElementHidden			? - maybe only negated version for the command above, or without negations
()	checkHeaderContains			checks HTML page haeder section
()	checkHeaderMatches			checks HTML page haeder section
()	checkElementChildCount		checks number of children in given element
()	checkElementSiblingCount	as above for siblings

selectByIdx						selected option in the combobox
selectByVisibleText
deselectByIdx					selected option in the combobox
deselectByVisibleText
multiSelect
multiDeselect

// all waits should be Fluent, with params: timeout=n, pollingInterval=m, ingoreNoSuchElementException=true/false
wait					implemented
waitFor					waits until element is present (timeout=n)
waitUntilVisible		waits until element is visible (timeout=n)
waitUntilClickable
waitUntilTextInElem
waitUntilSelected
waitUntilTitleIs
waitUntilAlert
waitUntilInvisible
waitUntilFrameAvailable

setPageLoadTimeout
setScriptTimeout
setImplicitWait			globally sets the wait time until throwing exception for missing element
restoreDefaultWait		restores what is configurad on WebSuitesConfig level

click
clickLink				click <a> link with text
clickLinkContaining
clickLinkMatching
clickText
clickTextContaining		if more than one element matches, pick first one
clickTextMatching		as above
doubleClick				(like clicks above)
ctrlClick
shiftClick
altClick
ctrlShiftClick
ctrlAltClick
shiftAltClick
dragAndDrop				from=source, to=target

press					press given key or key combination separated by "+" (use literals for characters)
keyDown
keyUp

addCookie				name=, value=, domain=, path=, expiry=(date), isSecure=, isHttpOnly (with defaults!)
deleteAllCookies
deleteCookieNamed
getCookieValue			name=, target value read into property, e.g. ${cookieValues.#cookieName#}

evaluateJsExpr			evaluates Javascript expression and writes it to a given target property

goto
back
forward
refresh
switchToWindow			switch to window with name
switchToFrame			switch to frame with name
closeAlert
acceptConfirm
dismissConfirm
readPopup				reads alert, confirm or prompt content
closeCurrent
quit